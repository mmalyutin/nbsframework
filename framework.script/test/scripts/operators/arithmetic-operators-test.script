
assert(10 + 20 == 30);

// add/sub
assert(1 + 999 == 1000);
assert([1, 2] + [3] == [1, 2, 3]);
assert([1, 2, 3] + [4, 5] == [1, 2, 3, 4, 5]);
assert(2 - -2 == 4);
assert(-1 + 1 == 0);
assert(1 - 50 == -49);
assert([1, 2, 3, 4, 5] - [4] == [1, 2, 3, 5]);
assert([1, 2, 3, 4, 5] - [4, 1] == [2, 3, 5]);

// union/intersection
assert(([1, 2, 3, 7] | [3, 1, 4, 5]) == [1, 2, 3, 7, 4, 5]);
assert(([1, 2, 3, 7] & [3, 1, 4, 5]) == [1, 3]);

// mul/div
assert(3 * 50 == 150);
assert(4 / 2 == 2);
assert(1 / 4 == 0.25);
assert(999999 % 3 == 0);
assert(-5 * -5 == 25);
assert([1, 2, 3] * 2 == [1, 2, 3, 1, 2, 3]);
assert('ab' * 3 == "ababab");

// power
assert(2 ^ 10 == 1024);
assert(3 ^ 3 == 27);
