//
println("Test Number type");

assert(7 / 5 == 1.4);

/*
// +
assert(10 + 20 == 30);
assert(20  + 10 == 30);
assert(-10 + 50 == 40);
assert(50 - 10 == 40);
assert(50 + -10 == 40);
assert(-20 + -30 == -50);
assert(-30 + -20 == -50);
assert(0 + 20 == 20);
assert(20 + 0 == 20);

assert(0.1 + 0.2 == 0.3);
assert(0.2 + 0.1 == 0.3);

// -
assert(30 - 20 == 10);
assert(-30 - 20 == -50);
assert(30 - 0 == 30);
assert(0 - 30 == -30);

// *
assert(20 * 2 == 40);
assert(2 * 20 == 40);
assert(1.2 * 5 == 6);
assert(5 * 1.2 == 6);
assert(1.2 * 1.3 == 1.56);
assert(1.3 * 1.2 == 1.56);
assert(-2 * 3 == -6);
assert(-3 * 2 == -6);
assert(0 * 2 == 0);
assert(2 * 0 == 0);

// /
assert(20 / 2 == 10);
assert(7 / 5 == 1.4);
assert(10 / -2 == -5);
assert(-10 / -2 == 5);
assert(0 / 2 == 0);

var x = 2 / 0;
println("2 / 0: " + x);
assert(x.isInfinity());

x = 0 / 0;
println("0 / 0: " + x);
assert(x.isNaN());

x = NaN;
println("NaN: " + x);
assert(x.isNaN());

x = Infinity;
println("Infinity: " + x);
assert(x.isInfinity());

x = -Infinity;
println("-Infinity: " + x);
assert(x.isInfinity());

x = +1;
println("+1: " + x);
assert(x == 1);

x = 1 + +1;
println("1 + +1: " + x);
assert(x == 2);

x = 1 + (+1);
println("1 + (+1): " + x);
assert(x == 2);


x = 1 + (-1);
println("1 + (-1): " + x);
assert(x == 0);

assert(.33 == 0.33);

assert(1.2345E+4 == 12345);
assert(12345E-4 == 1.2345);
assert(.12345E+4 == 1234.5);

var DELTA = 0.00000000001;
var a = 0.000000000002;
var b = 0.000000000003;

println(b - a);
println(b == a);

println(0.1 + 0.2);
println(0.3);

*/